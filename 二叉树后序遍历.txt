leetcode145.二叉树的后序遍历

给你一棵二叉树的根节点 root ，返回其节点值的 后序遍历 。

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

/*class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> res=new ArrayList<>();
        traverse(root,res);
        return res;
    }

    public void traverse(TreeNode root,List res)
    {
        if(root==null)
            return;
        traverse(root.left,res);
        traverse(root.right,res);
        res.add(root.val);
    }
}*/

class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> res=new ArrayList<>();·
        Deque<TreeNode> stack=new LinkedList<>();
        TreeNode prev=null;
        while(root!=null|| !stack.isEmpty())
        {
            while(root!=null)
            {
                stack.push(root);
                root=root.left;
            }
            root=stack.pop();
            if(root.right==null||root.right==prev){
                res.add(root.val);
                prev=root;
                root=null;
            }else{
                stack.push(root);
                root=root.right;
            }
        }
            return res;
    }
}